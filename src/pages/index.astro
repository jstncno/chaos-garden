---
import {type PostData} from '../common/post';
import {type GridItemData} from '../common/grid-item';
import GridLayout from '../components/GridLayout.astro';
import Layout from '../layouts/Layout.astro';

const posts: PostData[] = await Astro.glob('../posts/**/*.mdx');

const items: GridItemData[] = posts
	.filter(post => post.frontmatter.published!!)
	.map(post => ({
		link: post.frontmatter.id,
		title: post.frontmatter.title,
		body: post.frontmatter.title,
	}));

---

<Layout title="Chaos Garden">
	<main>
		<h1 class="title-header">Chaos Garden</h1>
		<GridLayout items={items}/>
	</main>
</Layout>

<style>
	main {
		/* margin: auto; */
		/* padding: 1rem; */
		/* Mobile first */
		width: 100%;
		/* width: 800px; */
		/* max-width: calc(100% - 2rem); */
		color: var(--font-color);
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1.title-header {
		font-family: "Playfair Display", serif;
		font-optical-sizing: auto;
		/* font-size: 4rem; */
		font-weight: 400;
		line-height: 1;
		/* margin-bottom: 1em; */
		margin: 15vh 0;
		text-align: center;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
